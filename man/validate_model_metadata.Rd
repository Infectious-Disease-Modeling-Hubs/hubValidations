% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate_model_metadata.R
\name{validate_model_metadata}
\alias{validate_model_metadata}
\title{Valid properties of a metadata file.}
\usage{
validate_model_metadata(
  hub_path,
  file_path,
  round_id = "default",
  validations_cfg_path = NULL
)
}
\arguments{
\item{hub_path}{Either a character string path to a local Modeling Hub directory
or an object of class \verb{<SubTreeFileSystem>} created using functions \code{\link[hubUtils:s3_bucket]{s3_bucket()}}
or \code{\link[hubUtils:gs_bucket]{gs_bucket()}} by providing a string S3 or GCS bucket name or path to a
Modeling Hub directory stored in the cloud.
For more details consult the
\href{https://arrow.apache.org/docs/r/articles/fs.html}{Using cloud storage (S3, GCS)}
in the \code{arrow} package.
The hub must be fully configured with valid \code{admin.json} and \code{tasks.json}
files within the \code{hub-config} directory.}

\item{file_path}{character string. Path to the file being validated relative to
the hub's model-output directory.}

\item{round_id}{character string. The round identifier. Used primarily to indicate
whether the "default" or a round specific configuration should be used for custom validations.}

\item{validations_cfg_path}{Path to \code{validations.yml} file. If \code{NULL}
defaults to \code{hub-config/validations.yml}.}
}
\value{
An object of class \code{hub_validations}. Each named element contains
a \code{hub_check} class object reflecting the result of a given check. Function
will return early if a check returns an error.
}
\description{
Valid properties of a metadata file.
}
\details{
Details of checks performed by \code{validate_model_metadata()}\if{html}{\out{
<table class="table table-striped table-hover table-condensed table-responsive" style="margin-left: auto; margin-right: auto;">
 <thead>
  <tr>
   <th style="text-align:left;"> Name </th>
   <th style="text-align:left;"> Check </th>
   <th style="text-align:left;"> Early return </th>
   <th style="text-align:left;"> Fail output </th>
   <th style="text-align:left;"> Extra info </th>
  </tr>
 </thead>
<tbody>
  <tr>
   <td style="text-align:left;font-weight: bold;"> metadata_schema_exists </td>
   <td style="text-align:left;"> A model metadata schema file exists in `hub-config` directory. </td>
   <td style="text-align:left;"> TRUE </td>
   <td style="text-align:left;"> check_error </td>
   <td style="text-align:left;">  </td>
  </tr>
  <tr>
   <td style="text-align:left;font-weight: bold;"> metadata_file_exists </td>
   <td style="text-align:left;"> A file with name provided to argument `file_path` exists at the expected location (the `model-metadata` directory). </td>
   <td style="text-align:left;"> TRUE </td>
   <td style="text-align:left;"> check_error </td>
   <td style="text-align:left;">  </td>
  </tr>
  <tr>
   <td style="text-align:left;font-weight: bold;"> metadata_file_ext </td>
   <td style="text-align:left;"> The metadata file has correct extension (yaml or yml). </td>
   <td style="text-align:left;"> TRUE </td>
   <td style="text-align:left;"> check_error </td>
   <td style="text-align:left;">  </td>
  </tr>
  <tr>
   <td style="text-align:left;font-weight: bold;"> metadata_file_location </td>
   <td style="text-align:left;"> The metadata file has been saved to correct location. </td>
   <td style="text-align:left;"> TRUE </td>
   <td style="text-align:left;"> check_failure </td>
   <td style="text-align:left;">  </td>
  </tr>
  <tr>
   <td style="text-align:left;font-weight: bold;"> metadata_matches_schema </td>
   <td style="text-align:left;"> The contents of the metadata file match the hub's model metadata schema </td>
   <td style="text-align:left;"> TRUE </td>
   <td style="text-align:left;"> check_error </td>
   <td style="text-align:left;">  </td>
  </tr>
  <tr>
   <td style="text-align:left;font-weight: bold;"> metadata_file_name </td>
   <td style="text-align:left;"> The metadata filename matches the model ID specified in the contents of the file. </td>
   <td style="text-align:left;"> TRUE </td>
   <td style="text-align:left;"> check_error </td>
   <td style="text-align:left;">  </td>
  </tr>
</tbody>
</table>
}}
}
\examples{
hub_path <- system.file("testhubs/simple", package = "hubValidations")
validate_model_metadata(hub_path,
  file_path = "hub-baseline.yml"
)
validate_model_metadata(hub_path,
  file_path = "team1-goodmodel.yaml"
)
}
